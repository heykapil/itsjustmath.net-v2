import fs from 'fs'
import matter from 'gray-matter'
import Link from 'next/link'
import path from 'path'
import Layout from '../components/Layout'
import { postFilePaths, POSTS_PATH } from '../utils/mdxUtils'

export default function Index({ posts }) {
  return (
    <Layout>
      {/* Intro Blurb */}
      <h1>Hi, I’m Justin!</h1>
      <p>I’m a New York-born and Los Angeles-raised front-end developer / UI engineer. When I’m not working, you can find me hiking, reading, sipping coffee, or laughing at my own terrible puns.</p>
      <p>I currently work at a mid-size creative agency called <strong><em>Zehner</em></strong> — where I’ve helped build sites such as <a href="https://store.stamps.com/">Stamps.com</a>, <a href="https://www.fijiwater.com">FIJI Water</a>, <a href="https://www.samuseum.org/">San Antonio Museum of Art</a>, <a href="https://www.trustthebum.com/">Sun Bum</a>, and <a href="https://www.zehnergroup.com/work">more</a>. Previously I worked on the apartment rental platform, Radpad.</p>
      <p>I’m interested in how we can use technology to upgrade our tools and techniques, and help us understand the complexity of the world. From there we’ll be able to develop new thoughts and new solutions to the most pressing issues we face today.</p>

      {/* <p>
        Click the link below to navigate to a page generated by{' '}
        <code>next-mdx-remote</code>.
      </p> */}

      {posts.length && <h2>Recent Posts</h2>}
      <ul>
        {posts.map((post) => (
          <li key={post.filePath}>
            <Link
              as={`/posts/${post.filePath.replace(/\.mdx?$/, '')}`}
              href={`/posts/[slug]`}
            >
              <a>{post.data.title}</a>
            </Link>
          </li>
        ))}
      </ul>
    </Layout>
  )
}

export function getStaticProps() {
  const posts = postFilePaths.map((filePath) => {
    const source = fs.readFileSync(path.join(POSTS_PATH, filePath))
    const { content, data } = matter(source)

    return {
      content,
      data,
      filePath,
    }
  })

  return { props: { posts } }
}
